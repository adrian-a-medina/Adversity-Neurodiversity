---
title: "Intersections of Adversity & Neurodiversity: Adverse Childhood Experiences' Association to Mental Health & the Buffering Role of Flourishing"
subtitle: "This study extends analyses conducted by <a href='https://www.healthaffairs.org/doi/10.1377/hlthaff.2018.05425'>Bethell et al. (2023)</a>, who explored the role of family resilience and connection in promoting flourishing among U.S. children facing adversity. Our study applies a similar framework but focuses on neurodivergent children, examining how adverse childhood experiences (ACEs) influence mental health outcomes and how flourishing behaviors—such as curiosity, emotional control, and task persistence—may buffer these effects. This study was conducted by the <a href='https://www.hsph.harvard.edu/profile/natalie-slopen/'>Slopen Laboratory</a> at the Harvard T.H. Chan School of Public Health."
format:
  lumo-html: 
    logo: "Brain Logo.png"
    github-repo: "https://www.github.com/adrian-a-medina/Adversity-Neurodiversity"
    primary-color: "#a31f37"
    self-contained: true
    is-particlejs-enabled: true
    code-summary: "Expand Code"
author: Adrián Medina
date: last-modified
---

# Introduction

This RMarkdown document presents the data analysis conducted for the manuscript entitled "***Intersections of Adversity & Neurodiversity: Adverse Childhood Experiences' Association to Mental Health & the Buffering Role of Flourishing***" ([in preparation]{.underline}). The analysis aims to explore the relationship between adverse childhood experiences (ACEs) and mental health outcomes among children living with neurodevelopmental disorders. Utilizing data from the National Survey of Children's Health (NSCH) spanning from 2016 to 2022, this work examines the moderating effects of child flourishing on the relationship between ACEs and mental health outcomes: anxiety, depression, and behavioral issues.

The objectives of this analysis include:

1.  Assessing the dose-response relationship between the number of ACEs and the risk of developing psychological issues.
2.  Exploring how aspects of child flourishing can mitigate the negative impacts of ACEs.
3.  Providing empirical support for the integration of flourishing-based strategies in interventions designed for children with neurodevelopmental challenges.

The insights derived from this analysis are intended to contribute to the academic discussion on pediatric mental health and support evidence-based policy making in child welfare and education. For detailed information on the dataset variables, refer to the [[**NSCH Data Dictionary**]{.underline}](https://www.census.gov/data-tools/demo/uccb/nschdict?s_keyword=).

# Dataset Initialization

```{r Setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, webshot = TRUE)
```

```{r Install & Load Necessary Packages, message = FALSE, warning = FALSE}
# Install and load the pacman package for efficient package management
if (!require(pacman)) install.packages("pacman")
library(pacman)

# Use p_load function to install (if necessary) and load packages
p_load(dplyr, tidyr, knitr, ggplot2, Hmisc, broom, stats, kableExtra, webshot2)

# Set CRAN repository for consistent package installation
options(repos = c(CRAN = "http://cran.rstudio.com/"))

```

```{r Data Extraction & Filtering, echo=TRUE, message=FALSE, warning=FALSE}
# Define the path to the dataset
data_path <- "~/Downloads/data_files/Data2_2016to2022.csv"  
Data2_2016to2022 <- read.csv(data_path)

# Prepare project data: Select specific variables, create 'neurodivergent' variable,
# & filter data based on age and neurodivergent status
neurodivergent_data <- Data2_2016to2022 %>%
  select(year, fpl, fpl_mean, sc_age_years, sc_hispanic_r, sc_race_r, sc_sex, higrade_tvis, k2q35a, k2q35c, k2q38a,
         k2q38c, k2q30a, k2q30c, k2q36a, k2q36c, k2q60a, k2q60c, k2q37a, k2q37c, downsyn, downsyn_desc, 
         k2q31a, k2q31c, k2q61a, cerpals_desc, k2q33a, k2q33b, k2q33c, k2q32a, k2q32b, k2q32c, k2q34a, k2q34b, k2q34c, 
         ace1, ace3, ace4, ace5, ace6, ace7, ace8, ace9, ace10, ace11, ace12, k6q71_r, k7q85_r, k7q84_r) %>%
  # Creating 'neurodivergent' variable as NSCH does not explicitly inquire about neurodivergent status.
  # Using a list of diagnoses provided by NSCH to define neurodivergent individuals.
  mutate(neurodivergent = if_else(k2q35a == 1 | k2q38a == 1 | k2q36a == 1 | k2q60a == 1 | 
                                  k2q37a == 1 | k2q30a == 1 | downsyn == 1 | 
                                  k2q31a == 1 | k2q61a == 1, 1, 0)) %>%
  # Filter data to include only individuals aged 6 or above and identified as neurodivergent
  filter(sc_age_years >= 6, neurodivergent == 1)

# Resulting filtered data to be used for further analysis
write.csv(neurodivergent_data, "neurodivergent_data.csv")

```

# Variable Preparation

```{r Recoding Analytic Variables & Covariates, echo=TRUE, message=FALSE, warning=FALSE}
# Recode 'ace1' to dichotomous variable based on analytic specifications
# 'ace1' is originally coded by NSCH as a frequency measure
# It is needed as indicative variable of presence like the other 'ace#' variables
neurodivergent_data$ace1_recode <- ifelse(neurodivergent_data$ace1 %in% c(2, 3, 4), 1, 
                                          ifelse(neurodivergent_data$ace1 == 1, 0, NA))

### Combining data manipulation functions into single 'dplyr' chain to optimize code execution.
# Calculate the Childhood Flourishing Index (CFI) based on Bethell et al. (2019) criteria
neurodivergent_data <- neurodivergent_data %>%
  mutate(CFI = rowSums(select(., k6q71_r, k7q85_r, k7q84_r) == 1, na.rm = TRUE),
         # Total ACE count for each child excluding missing values
         ace_total = rowSums(select(., ace1_recode, ace3:ace12) == 1, na.rm = TRUE),
         # Categorize total ACEs for further analysis
         ace_counts = cut(ace_total, breaks = c(-1, 0, 1, 3, Inf),
                          labels = c('1', '2', '3', '4'), right = TRUE),
         # Recode education, income, sex, race/ethnicity variables into categorical factors
         highgrade_tvis_cat = case_when(
           higrade_tvis == 1 ~ "Less than high school",
           higrade_tvis == 2 ~ "High school (including vocational)",
           higrade_tvis == 3 ~ "Some college or associate degree",
           higrade_tvis == 4 ~ "College degree or higher",
           TRUE ~ NA_character_
         ),
         fpl_cat = case_when(
           fpl %in% c(50:99) | fpl_mean < 100 ~ "Less than 100%",
           fpl %in% c(100:199) | fpl_mean < 200 ~ "100% to 199%",
           fpl %in% c(200:299) | fpl_mean < 300 ~ "200% to 299%",
           fpl %in% c(300:399) | fpl_mean < 400 ~ "300% to 399%",
           fpl %in% c(400:999) | fpl_mean < 999 ~ "400% or greater",
           TRUE ~ NA_character_
         ),
         sc_sex_cat = case_when(
           sc_sex == 1 ~ "Male",
           sc_sex == 2 ~ "Female",
           TRUE ~ NA_character_
         ),
         race = case_when(
           sc_race_r == 1 ~ "White",
           sc_race_r == 2 ~ "Black",
           sc_race_r == 3 ~ "American Indian or Alaska Native",
           sc_race_r %in% 4:5 ~ "Asian, Native Hawaiian, or Pacific Islander",
           sc_race_r %in% 6:7 ~ "Other or mixed race",
           TRUE ~ NA_character_
         ),
         ethnicity = case_when(
           sc_hispanic_r == 1 ~ "Hispanic/Latino",
           sc_hispanic_r == 2 ~ "Non-Hispanic/Latino",
           TRUE ~ NA_character_
         ),
         sc_race_cat = case_when(
           race %in% c("White") & ethnicity == "Non-Hispanic/Latino" ~ "Non-Hispanic White",
           race %in% c("Black") & ethnicity == "Non-Hispanic/Latino" ~ "Non-Hispanic Black or African American",
           race %in% c("American Indian or Alaska Native") & ethnicity == "Non-Hispanic/Latino" ~ "Non-Hispanic American Indian or Alaska Native",
           race %in% c("Asian, Native Hawaiian or Pacific Islander") & ethnicity == "Non-Hispanic/Latino" ~ "Non-Hispanic Asian, Native Hawaiian or Pacific Islander",
           race %in% c("Other or mixed race") & ethnicity == "Non-Hispanic/Latino" ~ "Non-Hispanic Other or mixed race",
           ethnicity == "Hispanic/Latino" ~ "Hispanic or Latino of any race",
           TRUE ~ NA_character_
         ),
         # Recode CFI into dichotomous variable
         CFI_dich = case_when(
           CFI == 3 ~ "1",
           CFI %in% 0:2 ~ "0",
           TRUE ~ NA_character_
         )
  )

```

# Frequencies, Visualizations, & Descriptive Statistics

```{r Frequency Calculations, echo=TRUE, results='asis'}
# Output with `results='asis'`: This ensures that the output from `knitr::kable` is rendered as HTML 
# (or LaTeX, depending on the output format of your document) directly into the document, enhancing the readability of tables.

# Creating frequency tables for specific diagnostic outcomes to assess their distribution in the dataset
freq_k2q33b <- table(neurodivergent_data$k2q33b == 1, useNA="ifany")
freq_k2q32b <- table(neurodivergent_data$k2q32b == 1, useNA="ifany")
freq_k2q34b <- table(neurodivergent_data$k2q34b == 1, useNA="ifany")

# Combine frequency tables into a single data frame for easy viewing
freq_table <- data.frame(
  Diagnosis = c("Anxiety", "Depression", "Behavioral Problems"),
  Count = c(freq_k2q33b["TRUE"], freq_k2q32b["TRUE"], freq_k2q34b["TRUE"])
)

# Use knitr::kable to format the frequency table for better readability in the output document
knitr::kable(freq_table, caption = "Frequency of Specific Diagnostic Outcomes")

# Count the number of subjects with a CFI score of 3 using a logical condition, as this is considered 'Flourishing.'
num_subjects_cfi_3 <- sum(neurodivergent_data$CFI == 3, na.rm = TRUE)
cat("Number of Subjects Flourishing (CFI Score of 3):", num_subjects_cfi_3, "\n")

```

```{r Visualizations}
# Histogram of ages for neurodivergent participants
ggplot(neurodivergent_data, aes(x = sc_age_years)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Age Distribution of Neurodivergent Participants", x = "Age (Years)", y = "Count") +
  theme_minimal()

# Bar plot of ACE counts categories
ggplot(neurodivergent_data, aes(x = factor(ace_counts), fill = factor(ace_counts))) +
  geom_bar() +
  geom_text(stat = 'count', aes(label = ..count..), position = position_stack(vjust = 0.5), color = "white") +
  labs(x = "ACE Counts Category", y = "Number of Children", fill = "ACE Category",
       title = "Distribution of Children by ACE Counts") +
  scale_x_discrete(labels = c('1' = "0 ACEs", '2' = "1 ACE", '3' = "2-3 ACEs", '4' = "4+ ACEs")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Bar plot of CFI counts categories
ggplot(neurodivergent_data, aes(x = factor(CFI), fill = factor(CFI))) +
  geom_bar() +
  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5, color = "black") +
  labs(x = "Childhood Flourishing Index (CFI) Score",
       y = "Number of Children",
       fill = "CFI Score",
       title = "Distribution of Children by CFI Score") +
  scale_x_discrete(labels = c('0' = "0", '1' = "1", '2' = "2", '3' = "3")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Bar plot of CFI_dich counts categories
ggplot(neurodivergent_data, aes(x = CFI_dich)) +
  geom_bar(aes(fill = CFI_dich)) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
  scale_fill_manual(values = c("0" = "blue", "1" = "green")) +
  labs(title = "Distribution of CFI Dichotomous Variable",
       x = "Child Flourishing Index (Dichotomous)",
       y = "Count") +
  theme_minimal() +
  theme(legend.title = element_blank()) # Remove the legend title if not needed

# Bar plot for educational attainment counts categories
ggplot(neurodivergent_data, aes(x = highgrade_tvis_cat)) +
  geom_bar(aes(fill = highgrade_tvis_cat)) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
  scale_fill_brewer(palette = "Pastel1") +
  labs(title = "Distribution of Adults' Highest Educational Attainment",
       x = "Educational Attainment",
       y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.title = element_blank())

# Bar plot for sex counts distribution
ggplot(neurodivergent_data, aes(x = sc_sex_cat)) +
  geom_bar(aes(fill = sc_sex_cat)) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
  scale_fill_manual(values = c("Male" = "lightblue", "Female" = "pink")) +
  labs(title = "Distribution by Sex",
       x = "Sex",
       y = "Count") +
  theme_minimal() +
  theme(legend.title = element_blank())

#Bar plot for SES counts categories
ggplot(neurodivergent_data, aes(x = fpl_cat)) +
  geom_bar(aes(fill = fpl_cat)) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
  scale_fill_brewer(palette = "Pastel2") +
  labs(title = "Distribution of Socioeconomic Status",
       x = "Socioeconomic Status",
       y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.title = element_blank())

# Bar plot for race counts categories
ggplot(neurodivergent_data, aes(x = sc_race_cat)) +
  geom_bar(aes(fill = sc_race_cat)) +
  geom_text(stat = 'count', aes(label = ..count..), position = position_stack(vjust = 0.5)) +
  scale_fill_brewer(palette = "Set3") +
  labs(title = "Distribution by Race",
       x = "Race",
       y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.title = element_blank())

```

```{r Descriptive Statistics & Cross Tabulations, echo=FALSE, results='asis', message=FALSE, warning=FALSE, cache=TRUE}
# Calculate mean and standard deviation of age for neurodivergent participants
age_stats <- neurodivergent_data %>%
  filter(neurodivergent == 1) %>%
  summarise(
    Mean_Age = mean(sc_age_years, na.rm = TRUE),
    SD_Age = sd(sc_age_years, na.rm = TRUE)
  )

# Print the statistics using a nicely formatted table
knitr::kable(age_stats, caption = "Age Statistics of Neurodivergent Participants")

# Calculate prevalence (%) of diagnoses among subject sample
variables <- c("k2q31a", "k2q35a", "k2q38a", "k2q30a", "k2q36a", "k2q60a", "k2q37a", "downsyn", "k2q61a")
variable_names <- c("ADHD", "Autism/ASD", "Tourette’s Syndrome", "Learning Disability", 
                    "Development Delay", "Intellectual Disability", 
                    "Speech/Other Language Disorder", "Down Syndrome", "Cerebral Palsy")

# Pre-calculate total respondents to avoid repeated computation
total_respondents <- colSums(!is.na(neurodivergent_data[variables]))

# Vectorized prevalence calculation
prevalences <- colSums(neurodivergent_data[variables] == 1, na.rm = TRUE) / total_respondents * 100
prevalence_table <- data.frame(Diagnosis = variable_names, Prevalence = prevalences)

# Display prevalence data in a table
knitr::kable(prevalence_table, caption = "Prevalence of Neurodivergent Conditions")

# Prepare the data for cross-tabulations
neurodivergent_data <- neurodivergent_data %>%
  mutate(
    k2q32b = factor(k2q32b, levels = c(2, 1), labels = c("No", "Yes")),
    k2q33b = factor(k2q33b, levels = c(2, 1), labels = c("No", "Yes")),
    k2q34b = factor(k2q34b, levels = c(2, 1), labels = c("No", "Yes")),
    CFI_dich = factor(CFI_dich, levels = c(0, 1), labels = c("Not flourishing", "Flourishing")),
    ace_counts = factor(ace_counts, levels = c(1, 2, 3, 4), labels = c("0", "1", "2 or 3", "4+"))
  )

# Create the cross-tabulations
table_data <- neurodivergent_data %>%
  select(k2q32b, k2q33b, k2q34b, CFI_dich, ace_counts) %>%
  pivot_longer(cols = c(k2q32b, k2q33b, k2q34b, CFI_dich), names_to = "Condition", values_to = "Status") %>%
  group_by(Condition, Status, ace_counts) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(Condition, ace_counts) %>%
  mutate(percent = n / sum(n) * 100) %>%
  pivot_wider(names_from = ace_counts, values_from = c(n, percent), names_sep = ", ")

# Format the table for presentation using 'kable' and 'kableExtra'
knitr::kable(table_data, format = "latex", caption = "Frequency and Percentage of Psychopathology and Flourishing across ACEs Categories") %>%
  kableExtra::kable_styling("striped", full_width = FALSE)

```

# Inferential Statistics

```{r Data Subsetting & Recoding Factors, echo=TRUE, message=FALSE, warning=FALSE}
# Subsetting data for regression analysis and recoding variables to factors for proper model fitting
analysis_data <- neurodivergent_data %>%
  select(ace_counts, CFI_dich, k2q33b, k2q32b, k2q34b, sc_race_cat, sc_sex_cat, fpl_cat, highgrade_tvis_cat, sc_age_years) %>%
  mutate(
    # Recoding ACE counts into a factor with ordered levels indicating the number of adverse childhood experiences
    ace_counts = factor(ace_counts, levels = c("0", "1", "2-3", "4+")),
    # Recoding the Childhood Flourishing Index into a binary factor indicating flourishing status
    CFI_dich = factor(CFI_dich, levels = c("Not flourishing", "Flourishing")),
    # Recoding binary outcomes for behavioral issues, depression, and anxiety into factors
    k2q33b = factor(k2q33b, levels = c("No", "Yes")),
    k2q32b = factor(k2q32b, levels = c("No", "Yes")),
    k2q34b = factor(k2q34b, levels = c("No", "Yes")),
    # Recoding race categories into factors to ensure proper representation in statistical tests
    sc_race_cat = factor(sc_race_cat, levels = c("Non-Hispanic White", "Non-Hispanic Black or African American", "Non-Hispanic American Indian or Alaska Native", "Non-Hispanic Asian, Native Hawaiian or Pacific Islander", "Non-Hispanic Other or mixed race", "Hispanic or Latino of any race")),
    # Recoding sex categories into a factor to control for gender differences in the analysis
    sc_sex_cat = factor(sc_sex_cat, levels = c("Male", "Female")),
    # Recoding federal poverty level categories into factors to reflect socioeconomic status
    fpl_cat = factor(fpl_cat, levels = c("Less than 100%", "100% to 199%", "200% to 299%", "300% to 399%", "400% or greater")),
    # Recoding educational attainment into factors, categorized by the highest level achieved
    highgrade_tvis_cat = factor(highgrade_tvis_cat, levels = c("Less than high school", "High school (including vocational)", "Some college or associate degree", "College degree or higher"))
  )

# Output the structure of the newly created dataset to verify the changes and ensure correct data types
str(analysis_data)

```

```{r Logistic Regressions, Interaction Terms, Exponentiation, & Confidence Intervals, echo=TRUE, message=FALSE, warning=FALSE}
# Fit basic logistic regression models for multiple outcomes and compute odds ratios and confidence intervals
outcomes <- list("Anxiety" = neurodivergent_data$k2q33b, "Depression" = neurodivergent_data$k2q32b, "Behavioral Problems" = neurodivergent_data$k2q34b)
models <- list()
or <- list()
ci <- list()

for (outcome_name in names(outcomes)) {
  outcome <- outcomes[[outcome_name]]
  
  # Fit model without interaction
  model <- glm(outcome ~ ace_counts + sc_race_cat + sc_sex_cat + fpl_cat + highgrade_tvis_cat + sc_age_years, 
               family = binomial, data = analysis_data)
  models[[paste(outcome_name, "No Interaction", sep = " ")]] <- model
  
  # Fit model with interaction
  model_interaction <- glm(outcome ~ ace_counts * CFI_dich + sc_race_cat + sc_sex_cat + fpl_cat + highgrade_tvis_cat + sc_age_years, 
                           family = binomial, data = analysis_data)
  models[[paste(outcome_name, "With Interaction", sep = " ")]] <- model_interaction
  
  # Calculate odds ratios and confidence intervals, ensuring model convergence
  if (!is.null(coef(model))) {
    or[[outcome_name]] <- list(
      "No Interaction" = exp(coef(model)),
      "With Interaction" = exp(coef(model_interaction))
    )
    ci[[outcome_name]] <- tryCatch({
      list(
        "No Interaction" = exp(confint(model)),
        "With Interaction" = exp(confint(model_interaction))
      )
    }, error = function(e) return(list(error = "Failed to compute confidence intervals")))
  } else {
    or[[outcome_name]] <- list(error = "Model did not converge")
  }
}

# Print model summaries and calculated odds ratios and confidence intervals
lapply(models, summary)
lapply(or, function(x) knitr::kable(x, caption = "Odds Ratios"))
lapply(ci, function(x) knitr::kable(x, caption = "Confidence Intervals"))

```
